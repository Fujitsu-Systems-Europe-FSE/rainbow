{"version":3,"sources":["webpack:///./node_modules/react-intl/lib/index.js","webpack:///./src/demo/index.js"],"names":["ReactDOM","render","fileMap","document","getElementById"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AACd;AAChE;AACsB;AACP;AACR;AACE;AACY;AACsG;AACwD;AAC3N;AACP;AACA;AACO;AACP;AACA;AACA;AACO,oBAAoB,yGAAwB;AAC5C,oBAAoB,yGAAwB;AACnD;AACO,sBAAsB,yGAAwB;AAC9C,oBAAoB,yGAAwB;AAC5C,2BAA2B,yGAAwB;AACnD,yBAAyB,sHAAqC;AAC9D,yBAAyB,sHAAqC;AACiC;;;;;;;;;;;;;ACzBtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGAA,gDAAQ,CAACC,MAAT,eACC;AAAK,OAAK,EAAE;AAAC,cAAU,GAAX;AAAgB,aAAQ;AAAxB;AAAZ,wBAEE,2DAAC,2EAAD;AAAY,UAAQ,EAAEC,0CAAtB;AAA+B,4BAA0B,EAAE;AAA3D,EAFF,CADD,EAKCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALD,E","file":"52323d3-main-wps-hmr.js","sourcesContent":["import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\nimport injectIntl, { Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\nimport useIntl from './src/components/useIntl';\nimport IntlProvider, { createIntl } from './src/components/provider';\nimport FormattedRelativeTime from './src/components/relative';\nimport FormattedPlural from './src/components/plural';\nimport FormattedMessage from './src/components/message';\nimport FormattedDateTimeRange from './src/components/dateTimeRange';\nexport { FormattedDateTimeRange, FormattedMessage, FormattedPlural, FormattedRelativeTime, IntlContext, IntlProvider, RawIntlProvider, createIntl, injectIntl, useIntl, };\nexport { createIntlCache, UnsupportedFormatterError, InvalidConfigError, MissingDataError, MessageFormatError, MissingTranslationError, IntlErrorCode as ReactIntlErrorCode, IntlError as ReactIntlError, } from '@formatjs/intl';\nexport function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\n// @ts-ignore issue w/ TS Intl types\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedList = createFormattedComponent('formatList');\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts, FormattedListParts, } from './src/components/createFormattedComponent';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FilePicker from '../lib/components/FilePicker.react.js'\nimport fileMap from './filemap.json';\n\n\nReactDOM.render(\n\t<div style={{\"height\": 500, \"width\":1000}}>\n\t  test\n\t  <FilePicker file_map={fileMap} multiple_selection_allowed={true}/>\n\t</div>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}