{"version":3,"sources":["webpack:///./src/lib/components/FilePicker.react.js"],"names":["setChonkyDefaults","iconComponent","ChonkyIconFA","disableDragAndDrop","FilePicker","props","id","multipleSelectionAllowed","multiple_selection_allowed","otherProps","file_map","rootFolderId","fileMap","setProps","useFiles","currentFolderId","fileMask","useMemo","currentFolder","files","childrenIds","forEach","filename","includes","push","useFolderChain","folderChain","parentId","parentFile","unshift","useFileActionHandler","setCurrentFolderId","useCallback","data","ChonkyActions","OpenFiles","payload","targetFile","fileToOpen","FileHelper","isDirectory","ChangeSelection","selection","selectedFiles","Array","from","MouseClickFile","clickType","currentId","file","currentIdArray","useState","setFileMask","handleChange","e","target","value","useEffect","handleFileAction","actionsToDisable","OpenSelection","SelectAllFiles","ClearSelection","EnableListView","defaultProps","selected_files","root_folder_id","propTypes","PropTypes","string","bool","array","object","func"],"mappings":"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","file":"c6469ae-main-wps-hmr.js","sourcesContent":["import {\n    ChonkyActions,\n    FileBrowser,\n    FileContextMenu,\n    FileHelper,\n    FileList,\n    FileNavbar,\n    FileToolbar,\n    setChonkyDefaults,\n} from 'chonky';\nimport { ChonkyIconFA } from 'chonky-icon-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport \"./FilePicker.css\";\n\nsetChonkyDefaults({\n  iconComponent: ChonkyIconFA,\n  disableDragAndDrop: true\n});\n\nexport default function FilePicker(props) {\n  // get data\n  const {\n    id,\n    multiple_selection_allowed : multipleSelectionAllowed,\n    ...otherProps\n  } = props;\n\n  const file_map = props.file_map ?? { rootFolderId : \"none\", fileMap : {} };\n  const fileMap = file_map.fileMap;\n\n  // get the setProps function, which is used to communicate\n  // changes in the props back to Dash\n  // setProps will not be defined unless this component is\n  // running in Dash, so use a dummy function in standalone mode\n  let setProps;\n  if ( props[\"setProps\"] ) {\n    setProps = props[\"setProps\"]\n  }\n  else {\n    setProps = () => {}\n  }\n\n  const useFiles = (currentFolderId, fileMask) => {\n    return useMemo(() => {\n      const currentFolder = fileMap[currentFolderId];\n      const files = [];\n      currentFolder.childrenIds.forEach(id => {\n        const filename = fileMap[id];\n        if (filename) {\n          if ( ( fileMask && filename[\"name\"].includes(fileMask) ) ||\n               ( !fileMask ) ) {\n            files.push(filename);\n          }\n        }\n      });\n      // const files = currentFolder.childrenIds\n      //     ? currentFolder.childrenIds.map((fileId) => fileMap[fileId] ?? null)\n      //     : [];\n      return files;\n    }, [currentFolderId, file_map, fileMask]);\n  };\n\n  const useFolderChain = (currentFolderId) => {\n    return useMemo(() => {\n      const currentFolder = fileMap[currentFolderId];\n      const folderChain = [currentFolder];\n\n      let parentId = currentFolder.parentId;\n      while (parentId) {\n        const parentFile = fileMap[parentId];\n        if (parentFile) {\n            folderChain.unshift(parentFile);\n            parentId = parentFile.parentId;\n        } else {\n            parentId = null;\n        }\n      }\n\n      return folderChain;\n    }, [currentFolderId, file_map]);\n  };\n\n  const useFileActionHandler = (setCurrentFolderId) => {\n    return useCallback((data) => {\n      if (data.id === ChonkyActions.OpenFiles.id) {\n        const { targetFile, files } = data.payload;\n        const fileToOpen = targetFile ?? files[0];\n        if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\n            setCurrentFolderId(fileToOpen.id);\n            setProps({\"selected_files\" : []});\n        }\n      }\n      else if ( multipleSelectionAllowed && data.id === ChonkyActions.ChangeSelection.id ) {\n        const { selection } = data.payload;\n        const selectedFiles = Array.from(selection);\n        //console.log(\"multiple selection\", selectedFiles);\n        setProps({\"selected_files\" : selectedFiles})\n      }\n      else if ( !multipleSelectionAllowed && data.id === ChonkyActions.MouseClickFile.id ) {\n        const clickType = data.payload.clickType;\n        if ( clickType == \"single\" ) {\n          const currentId = data.payload.file.id || \"none\";\n          const currentIdArray = [ currentId ];         \n          //console.log(\"single selection:\", currentIdArray);\n          setProps({\"selected_files\" : currentIdArray});\n        }\n      }\n    },\n    [setCurrentFolderId]);\n  }\n\n  const [currentFolderId, setCurrentFolderId] = useState(file_map.rootFolderId);\n  const [fileMask, setFileMask] = useState();\n  const handleChange = (e) => {\n    setFileMask(e.target.value);\n  };\n\n  const files = useFiles(currentFolderId, fileMask);\n  useEffect(() => {\n    //console.log(\"setting root folder id to\", currentFolderId);\n    setProps({ \"root_folder_id\" : currentFolderId });\n  }, [currentFolderId]);\n  const folderChain = useFolderChain(currentFolderId);\n  const handleFileAction = useFileActionHandler(setCurrentFolderId);\n\n\n  const actionsToDisable = [ ChonkyActions.OpenSelection.id ]\n  if (!multipleSelectionAllowed) {\n    actionsToDisable.push(ChonkyActions.SelectAllFiles.id);\n    actionsToDisable.push(ChonkyActions.ClearSelection.id);\n  }\n\n  return (\n    <div className=\"FilePicker\">\n      <input type=\"text\" className=\"SearchBox\" onChange={handleChange} placeholder=\"search\"/>\n      <FileBrowser\n        files={files}\n        folderChain={folderChain}\n        onFileAction={handleFileAction}\n        defaultFileViewActionId={ChonkyActions.EnableListView.id}\n        disableDefaultFileActions={actionsToDisable}\n        disableSelection={!multipleSelectionAllowed}\n      >\n        <FileNavbar />\n        <FileToolbar />\n        <FileList />\n      </FileBrowser>\n    </div>\n  );\n};\n\nFilePicker.defaultProps = {\n    selected_files : [],\n    file_map : {},\n    root_folder_id : '',\n    multiple_selection_allowed : true,\n};\n\nFilePicker.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Whether we are allowed to select multiple files\n     */\n    multiple_selection_allowed: PropTypes.bool,\n\n    /**\n     * Selected files.\n     */\n    selected_files: PropTypes.array,\n\n    /**\n     * The id of the root folder.\n     */\n    root_folder_id: PropTypes.string,\n\n    /**\n     * JSON-style dictionary containing file tree.\n     */\n    file_map: PropTypes.object,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};\n"],"sourceRoot":""}