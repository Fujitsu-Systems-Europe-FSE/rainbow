{"version":3,"sources":["webpack:///./src/lib/components/FilePicker.react.js"],"names":["setChonkyDefaults","iconComponent","ChonkyIconFA","disableDragAndDrop","FilePicker","props","id","setProps","otherProps","useFiles","currentFolderId","useMemo","currentFolder","fileMap","files","childrenIds","map","fileId","useFolderChain","folderChain","parentId","parentFile","unshift","useFileActionHandler","setCurrentFolderId","useCallback","data","ChonkyActions","OpenFiles","payload","targetFile","fileToOpen","FileHelper","isDirectory","ChangeSelection","selectedFiles","selection","Array","from","console","log","rootFolderId","useState","handleFileAction","actionsToDisable","OpenSelection","SelectAllFiles","ClearSelection","EnableListView","defaultProps","propTypes","PropTypes","string","array","object","func"],"mappings":"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","file":"6c693a1-main-wps-hmr.js","sourcesContent":["import {\n    ChonkyActions,\n    FileBrowser,\n    FileContextMenu,\n    FileHelper,\n    FileList,\n    FileNavbar,\n    FileToolbar,\n    setChonkyDefaults,\n} from 'chonky';\nimport { ChonkyIconFA } from 'chonky-icon-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useCallback, useMemo, useState} from 'react';\n\nsetChonkyDefaults({\n  iconComponent: ChonkyIconFA,\n  disableDragAndDrop: true\n});\n\nexport default function FilePicker(props) {\n  const {\n    id,\n    setProps,\n    ...otherProps\n  } = props;\n\n  const useFiles = (currentFolderId) => {\n      return useMemo(() => {\n          const currentFolder = fileMap[currentFolderId];\n          const files = currentFolder.childrenIds\n              ? currentFolder.childrenIds.map((fileId) => fileMap[fileId] ?? null)\n              : [];\n          return files;\n      }, [currentFolderId]);\n  };\n\n  const useFolderChain = (currentFolderId) => {\n      return useMemo(() => {\n          const currentFolder = fileMap[currentFolderId];\n\n          const folderChain = [currentFolder];\n\n          let parentId = currentFolder.parentId;\n          while (parentId) {\n            const parentFile = fileMap[parentId];\n            if (parentFile) {\n              folderChain.unshift(parentFile);\n              parentId = parentFile.parentId;\n            } else {\n              parentId = null;\n            }\n          }\n\n          return folderChain;\n      }, [currentFolderId]);\n  };\n\n  const useFileActionHandler = (setCurrentFolderId) => {\n    return useCallback(\n        (data) => {\n          if (data.id === ChonkyActions.OpenFiles.id) {\n            // if open action occurred on a folder, open it\n            const { targetFile, files } = data.payload;\n            const fileToOpen = targetFile ?? files[0];\n            if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\n                setCurrentFolderId(fileToOpen.id);\n                return;\n            }\n          }\n          else if (data.id === ChonkyActions.ChangeSelection.id) {\n            // get selected files\n            let selectedFiles = data.payload.selection;\n            selectedFiles = Array.from(selectedFiles);\n            setProps({ \"selectedFiles\" : selectedFiles })\n            console.log(\"selected:\", selectedFiles);\n            return;\n          }\n        },\n        [setCurrentFolderId]\n    );\n  };\n\n  const fileMap = props.fileMap.fileMap || {};\n  const rootFolderId = props.fileMap.rootFolderId;\n\n  const [currentFolderId, setCurrentFolderId] = useState(rootFolderId);\n  const files = useFiles(currentFolderId);\n  const folderChain = useFolderChain(currentFolderId);\n  const handleFileAction = useFileActionHandler(setCurrentFolderId);\n\n  const actionsToDisable = [\n    ChonkyActions.OpenSelection.id,\n    ChonkyActions.SelectAllFiles.id,\n    ChonkyActions.ClearSelection.id,\n  ];\n\n  return (\n      <FileBrowser\n        files={files}\n        folderChain={folderChain}\n        onFileAction={handleFileAction}\n        defaultFileViewActionId={ChonkyActions.EnableListView.id}\n        disableDefaultFileActions={actionsToDisable}\n        disableSelection={true}\n      >\n        <FileNavbar />\n        <FileToolbar />\n        <FileList />\n        <FileContextMenu />\n      </FileBrowser>\n  );\n};\n\nFilePicker.defaultProps = {\n    selectedFiles : [],\n    fileMap : {}\n};\n\nFilePicker.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Selected files.\n     */\n    selectedFiles: PropTypes.array,\n\n    /**\n     * JSON-style dictionary containing file tree.\n     */\n    fileMap: PropTypes.object,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};"],"sourceRoot":""}