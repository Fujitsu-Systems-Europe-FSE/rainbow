{"version":3,"sources":["webpack:///./src/lib/components/FilePicker.react.js"],"names":["setChonkyDefaults","iconComponent","ChonkyIconFA","disableDragAndDrop","FilePicker","props","id","multiple_selection_allowed","setProps","otherProps","useFiles","currentFolderId","selectedFiles","useMemo","currentFolder","fileMap","files","childrenIds","map","fileId","useFolderChain","folderChain","parentId","parentFile","unshift","useFileActionHandler","setCurrentFolderId","useCallback","data","ChonkyActions","OpenFiles","payload","targetFile","fileToOpen","FileHelper","isDirectory","ChangeSelection","selection","Array","from","console","log","MouseClickFile","KeyboardClickFile","currentFile","file","rootFolderId","useState","handleFileAction","actionsToDisable","OpenSelection","push","SelectAllFiles","ClearSelection","EnableListView","defaultProps","propTypes","PropTypes","string","bool","array","object","func"],"mappings":"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","file":"3edc65c-main-wps-hmr.js","sourcesContent":["import {\n    ChonkyActions,\n    FileBrowser,\n    FileContextMenu,\n    FileHelper,\n    FileList,\n    FileNavbar,\n    FileToolbar,\n    setChonkyDefaults,\n} from 'chonky';\nimport { ChonkyIconFA } from 'chonky-icon-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useCallback, useMemo, useState} from 'react';\n\nsetChonkyDefaults({\n  iconComponent: ChonkyIconFA,\n  disableDragAndDrop: true\n});\n\nexport default function FilePicker(props) {\n  const {\n    id,\n    multiple_selection_allowed,\n    setProps,\n    ...otherProps\n  } = props;\n\n  const useFiles = (currentFolderId) => {\n      setProps({ \"selectedFiles\" : selectedFiles });\n      return useMemo(() => {\n          const currentFolder = fileMap[currentFolderId];\n          const files = currentFolder.childrenIds\n              ? currentFolder.childrenIds.map((fileId) => fileMap[fileId] ?? null)\n              : [];\n          return files;\n      }, [currentFolderId]);\n  };\n\n  const useFolderChain = (currentFolderId) => {\n      return useMemo(() => {\n          const currentFolder = fileMap[currentFolderId];\n\n          const folderChain = [currentFolder];\n\n          let parentId = currentFolder.parentId;\n          while (parentId) {\n            const parentFile = fileMap[parentId];\n            if (parentFile) {\n              folderChain.unshift(parentFile);\n              parentId = parentFile.parentId;\n            } else {\n              parentId = null;\n            }\n          }\n\n          return folderChain;\n      }, [currentFolderId]);\n  };\n\n  const useFileActionHandler = (setCurrentFolderId) => {\n    return useCallback(\n        (data) => {\n          if (data.id === ChonkyActions.OpenFiles.id) {\n            // if open action occurred on a folder, open it\n            const { targetFile, files } = data.payload;\n            const fileToOpen = targetFile ?? files[0];\n            if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\n                setCurrentFolderId(fileToOpen.id);\n                return;\n            }\n          }\n          else if (multiple_selection_allowed && \n                   data.id === ChonkyActions.ChangeSelection.id) {\n            // get selected files\n            let selectedFiles = data.payload.selection;\n            selectedFiles = Array.from(selectedFiles);\n            setProps({ \"selectedFiles\" : selectedFiles });\n            console.log(\"selected:\", selectedFiles);\n            return;\n          }\n          else if (!multiple_selection_allowed && \n                    ( data.id === ChonkyActions.MouseClickFile.id ||\n                      data.id === ChonkyActions.KeyboardClickFile    )) {\n            const currentFile = data.payload.file.id || \"none\";\n            setProps({ \"selectedFiles\" : currentFile});\n            console.log(\"current:\", currentFile);\n            return;\n          }\n        },\n        [setCurrentFolderId]\n    );\n  };\n\n  const fileMap = props.fileMap.fileMap || {};\n  const rootFolderId = props.fileMap.rootFolderId;\n\n  const [currentFolderId, setCurrentFolderId] = useState(rootFolderId);\n  const files = useFiles(currentFolderId);\n  const folderChain = useFolderChain(currentFolderId);\n  const handleFileAction = useFileActionHandler(setCurrentFolderId);\n\n  const actionsToDisable = [ ChonkyActions.OpenSelection.id ]\n  if (!multiple_selection_allowed) {\n    actionsToDisable.push(ChonkyActions.SelectAllFiles.id);\n    actionsToDisable.push(ChonkyActions.ClearSelection.id);\n  }\n\n  return (\n      <FileBrowser\n        files={files}\n        folderChain={folderChain}\n        onFileAction={handleFileAction}\n        defaultFileViewActionId={ChonkyActions.EnableListView.id}\n        disableDefaultFileActions={actionsToDisable}\n        disableSelection={!multiple_selection_allowed}\n      >\n        <FileNavbar />\n        <FileToolbar />\n        <FileList />\n        <FileContextMenu />\n      </FileBrowser>\n  );\n};\n\nFilePicker.defaultProps = {\n    selectedFiles : [],\n    fileMap : {},\n    multiple_selection_allowed : true,\n};\n\nFilePicker.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Whether we are allowed to select multiple files\n     */\n    multiple_selection_allowed: PropTypes.bool,\n\n    /**\n     * Selected files.\n     */\n    selectedFiles: PropTypes.array,\n\n    /**\n     * The id of the current folder root.\n     */\n     rootFolderId: PropTypes.string,\n\n    /**\n     * JSON-style dictionary containing file tree.\n     */\n    fileMap: PropTypes.object,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};"],"sourceRoot":""}